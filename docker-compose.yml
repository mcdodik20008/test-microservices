version: '3.9'
services:

  # region Services
  registry-eureka:
    build:
      context: ./registry-eureka
    restart: always
    ports:
      - "8761:8761"
    environment:
      - CONFIG_HOST=http://config-server:8888
      - CONFIG_NAME=eureka
      - CONFIG_PROFILE=default
    networks:
      - base-network
    depends_on:
      - config-server

  config-server:
    build:
      context: ./config-server
    restart: always
    ports:
      - "8888:8888"
    environment:
      - EUREKA_SERVICE_URL=http://registry-eureka:8761/eureka/
    networks:
      - base-network

  api-gateway:
    build:
      context: ./api-gateway
    restart: always
    ports:
      - "8080:8080"
    environment:
      - CONFIG_HOST=http://config-server:8888
      - CONFIG_NAME=api-gateway
      - CONFIG_PROFILE=default
    networks:
      - base-network
    depends_on:
      - config-server
  # endregion

  # region Apps
  animal:
    build:
      context: ./animals
    restart: always
    environment:
      - CONFIG_HOST=http://config-server:8888
      - CONFIG_NAME=animals
      - CONFIG_PROFILE=default
    ports:
      - "8081:8081"
    depends_on:
      - config-server
      - animal_db
    networks:
      - base-network

  animal_db:
    image: postgres:15
    container_name: animal_db
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: animal
      POSTGRES_PASSWORD: 1234
      POSTGRES_DB: animal
    networks:
      - base-network
  # endregion

  # region Extends

  prometheus:
    extends:
      file: docker-compose-monitoring.yml
      service: prometheus
    networks:
      - base-network

  grafana:
    extends:
      file: docker-compose-monitoring.yml
      service: grafana
    networks:
      - base-network

  kafka:
    extends:
      file: docker-compose-kafka.yml
      service: kafka
    networks:
      - base-network
    depends_on:
      - zookeeper

  zookeeper:
    extends:
      file: docker-compose-kafka.yml
      service: zookeeper
    networks:
      - base-network

  # endregion

networks:
  base-network:
    driver: bridge